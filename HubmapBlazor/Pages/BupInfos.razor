
@page "/BottomUp/{Accession?}"
@inject NavigationManager NavManager
@using HubmapBlazor.Data
@inject BupService BupService

<h1>Bottom Up</h1>

<MudDataGrid MultiSelection="true" Items="@bupInfos" Sortable="true" Filterable="true" QuickFilter="@_quickFilter">
    <ToolBarContent>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <Column T="Bup" Field="UniprotAccession" Title="Accession" />
        <Column T="Bup" Field="UniprotName" Title="Name" />
        <Column T="Bup" Field="GeneDescription" Title="Description" />
        <Column T="Bup" Field="CommonTissue" Title="Tissue" />
        <Column T="Bup" Field="Dataset" />
        <Column T="Bup" Field="Abundance" />
        <Column T="Bup" Field="Rank" />
        <Column T="Bup" Field="NormRank" />
    </Columns>
    <PagerContent>
        <MudDataGridPager T="Bup" />
    </PagerContent>
</MudDataGrid>




@code {

    [Parameter]
    public string? Accession { get; set; }



    private IEnumerable<Bup> bupInfos = Enumerable.Empty<Bup>();

    protected override async Task OnInitializedAsync()
    {

        if (Accession != null)
        {
            bupInfos = BupService.GetAccessionBupInfos(Accession);
        }
        else bupInfos = BupService.GetBupInfos();
    }

    private string _searchString;

    // quick filter - filter gobally across multiple columns with the same input
    private Func<Bup, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;
        if (x.UniprotAccession.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (x.UniprotName.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (x.GeneDescription.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (x.CommonTissue.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (x.Dataset.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    };

}

